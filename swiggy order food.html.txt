<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Swiggy Order Assistant</title>
  <script src="https://telegram.org/js/telegram-web-app.js"></script>
  <style>
    body { font-family: Arial, sans-serif; padding: 20px; background: #fdf6e3; }
    .hidden { display: none; }
    .step, .landing { margin-bottom: 20px; }
    button {
      padding: 10px 15px; margin: 5px; cursor: pointer;
      border: none; border-radius: 5px; background: #ff6b00; color: white;
    }
    .lang-toggle { position: absolute; top: 10px; right: 10px; background: #333; color: #fff; padding: 8px; border-radius: 5px; }
    input, textarea {
      width: 100%; padding: 10px; margin-top: 5px;
      font-size: 16px; border-radius: 6px; border: 1px solid #ccc;
    }
    .error { color: red; font-size: 14px; display: none; }
  </style>
</head>
<body>

<button class="lang-toggle" onclick="toggleLanguage()">‡§π‡§ø‡§Ç‡§¶‡•Ä</button>

<div id="landing" class="landing">
  <h2 id="title">Welcome to Swiggy Order Assistant</h2>
  <p id="instructions">Click the button below to start your order.</p>

  <!-- Added image and example instructions -->
  <img src="https://i.ibb.co/GvdwqBgR/IMG-20250409-100556.jpg" alt="Example" style="max-width: 100%; border-radius: 8px; margin: 15px 0;" />
  <ul style="background: #fffbe6; padding: 15px; border-radius: 10px; border: 1px solid #ffd700;">
    <li>Enter your food amount</li>
    <li>Enter restaurant tax and GST and platform fee if applicable (gst + platform fee ek sath jor ke dale)</li>
    <li>Distance enter kare Km me</li>
  </ul>

  <button onclick="showStep(1)">Get Started</button>
</div>

 

<div id="step1" class="step hidden">
  <label id="label1">Enter Food Amount (‚Çπ):</label>
  <input type="number" id="foodAmount"/>
  <div class="error" id="amountError">Minimum order value is ‚Çπ199</div>
  <button onclick="nextStep(2)">Next</button>
</div>

<div id="step2" class="step hidden">
  <label id="label2">Enter Tax + GST (‚Çπ):</label>
  <input type="number" id="taxAmount"/>
  <button onclick="prevStep(1)">Back</button>
  <button onclick="nextStep(3)">Next</button>
</div>

<div id="step3" class="step hidden">
  <label id="label3">Enter Delivery Distance (km):</label>
  <input type="number" id="distance"/>
  <div class="error" id="distanceError">Free delivery only up to 7 km</div>
  <button onclick="prevStep(2)">Back</button>
  <button onclick="calculate()">Calculate</button>
</div>

<div id="summary" class="step hidden">
  <p id="resultText"></p>
  <label><strong>Upload Cart Screenshot (required):</strong></label>
  <input type="file" id="screenshot" accept="image/*"/>
  <label><strong>Swiggy Address Link:</strong></label>
  <input type="text" id="addressLink" placeholder="Paste from Swiggy app"/>
  <button onclick="sendToSeller()">Submit Order</button>
</div>

<div id="finalMsg" class="hidden">
  <h3>‚úÖ Your Order is in Review</h3>
  <p>Discounts change often. Please confirm with the seller.</p>
  <a href="https://t.me/katiharvloger2" target="_blank" style="color: #0088cc; font-weight: bold;">
    <img src="https://telegram.org/img/t_logo.png" height="20" style="vertical-align: middle; margin-right: 5px;"/>
    Contact Seller @katiharvloger2
  </a>
</div>

<script>
  let tg = window.Telegram.WebApp;
  tg.expand();
  let user = tg.initDataUnsafe?.user || {};
  let language = "en";

  function toggleLanguage() {
    language = language === "en" ? "hi" : "en";
    document.querySelector(".lang-toggle").innerText = language === "en" ? "‡§π‡§ø‡§Ç‡§¶‡•Ä" : "EN";
    document.getElementById("title").innerText = language === "en" ? "Welcome to Swiggy Order Assistant" : "‡§∏‡•ç‡§µ‡§ø‡§ó‡•Ä ‡§ë‡§∞‡•ç‡§°‡§∞ ‡§∏‡§π‡§æ‡§Ø‡§ï ‡§Æ‡•á‡§Ç ‡§Ü‡§™‡§ï‡§æ ‡§∏‡•ç‡§µ‡§æ‡§ó‡§§ ‡§π‡•à";
    document.getElementById("instructions").innerText = language === "en" ? "Click the button below to start your order." : "‡§Ö‡§™‡§®‡§æ ‡§ë‡§∞‡•ç‡§°‡§∞ ‡§∂‡•Å‡§∞‡•Ç ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§®‡•Ä‡§ö‡•á ‡§¶‡§ø‡§è ‡§ó‡§è ‡§¨‡§ü‡§® ‡§™‡§∞ ‡§ï‡•ç‡§≤‡§ø‡§ï ‡§ï‡§∞‡•á‡§Ç‡•§";
    document.getElementById("label1").innerText = language === "en" ? "Enter Food Amount (‚Çπ):" : "‡§≠‡•ã‡§ú‡§® ‡§∞‡§æ‡§∂‡§ø ‡§¶‡§∞‡•ç‡§ú ‡§ï‡§∞‡•á‡§Ç (‚Çπ):";
    document.getElementById("label2").innerText = language === "en" ? "Enter Tax + GST (‚Çπ):" : "‡§ï‡§∞ + ‡§ú‡•Ä‡§è‡§∏‡§ü‡•Ä ‡§¶‡§∞‡•ç‡§ú ‡§ï‡§∞‡•á‡§Ç (‚Çπ):";
    document.getElementById("label3").innerText = language === "en" ? "Enter Delivery Distance (km):" : "‡§°‡§ø‡§≤‡•Ä‡§µ‡§∞‡•Ä ‡§¶‡•Ç‡§∞‡•Ä ‡§¶‡§∞‡•ç‡§ú ‡§ï‡§∞‡•á‡§Ç (‡§ï‡§ø.‡§Æ‡•Ä.):";
  }

  function showStep(step) {
    document.getElementById("landing").classList.add("hidden");
    document.getElementById("step" + step).classList.remove("hidden");
  }

  function nextStep(step) {
    if (step === 2) {
      const foodAmount = parseFloat(document.getElementById("foodAmount").value);
      if (isNaN(foodAmount) || foodAmount < 199) {
        document.getElementById("amountError").style.display = "block";
        return;
      } else {
        document.getElementById("amountError").style.display = "none";
      }
    }
    document.querySelectorAll('.step').forEach(e => e.classList.add('hidden'));
    document.getElementById("step" + step).classList.remove("hidden");
  }

  function prevStep(step) {
    nextStep(step);
  }

  function calculate() {
    const distance = parseFloat(document.getElementById("distance").value);
    if (isNaN(distance) || distance > 7) {
      document.getElementById("distanceError").style.display = "block";
      return;
    } else {
      document.getElementById("distanceError").style.display = "none";
    }

    let food = parseFloat(document.getElementById("foodAmount").value);
    let tax = parseFloat(document.getElementById("taxAmount").value);

    let total = food + tax;
    let discount = 0, extra = 0;

    if (total >= 299) {
      discount = 125;
    } else if (total >= 199) {
      discount = 90;
      extra = 15;
    }

    let finalAmount = total - discount + extra;

    document.getElementById("resultText").innerText =
      `Total: ‚Çπ${total}, Discount: ‚Çπ${discount}, Extra: ‚Çπ${extra}, Final: ‚Çπ${finalAmount}`;

    // FIXED this part
    document.querySelectorAll('.step').forEach(e => e.classList.add('hidden'));
    document.getElementById("summary").classList.remove("hidden");
  }

  async function sendToSeller() {
    const food = document.getElementById("foodAmount").value;
    const tax = document.getElementById("taxAmount").value;
    const distance = document.getElementById("distance").value;
    const address = document.getElementById("addressLink").value;
    const screenshot = document.getElementById("screenshot").files[0];
    if (!screenshot || !address) return alert("Please upload screenshot and address link");

    const msg = `üõí *New Swiggy Order:*\n\nüë§ *User:* @${user.username}\nüÜî *ID:* ${user.id}\n\nüçî *Amount:* ‚Çπ${food}\nüßæ *Tax:* ‚Çπ${tax}\nüìç *Distance:* ${distance} km\nüîó *Swiggy Address:* ${address}`;

    try {
      await fetch(`https://api.telegram.org/bot7069586996:AAG5A-LLSWaQrLQ9EqM8_JihaQI3I90bFik/sendMessage`, {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ chat_id: "7241783674", text: msg, parse_mode: "Markdown" })
      });

      const formData = new FormData();
      formData.append("chat_id", "7241783674");
      formData.append("photo", screenshot);

      await fetch(`https://api.telegram.org/bot7069586996:AAG5A-LLSWaQrLQ9EqM8_JihaQI3I90bFik/sendPhoto`, {
        method: "POST",
        body: formData
      });

      document.querySelectorAll(".step").forEach(e => e.classList.add("hidden"));
      document.getElementById("finalMsg").classList.remove("hidden");
    } catch (err) {
      alert("Failed to send order. Please try again.");
      console.error("Telegram API error:", err);
    }
  }
</script>

</body>
</html>

